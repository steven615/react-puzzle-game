{"version":3,"sources":["assets/img/fruit.svg","components/NumRows.js","components/PlateButton.js","App.js","reportWebVitals.js","index.js"],"names":["NumRows","React","forwardRef","props","ref","handleClick","e","target","clickedAnswer","Number","innerText","rightAnswer","onClick","style","background","setTimeout","removeProperty","className","rows","i","push","getNumRows","PlateButton","draggable","onStart","onDrag","onStop","disabled","position","index","isClickable","slot","styles","transform","x","y","cursor","classNames","data-slot-id","btn","closest","classList","add","App","useState","slotElems","setSlotElems","selectedSlotElem","setSelectedSlotElem","matchedPlateElems","setMatchedPlateElems","matchedSlotElems","setMatchedSlotElems","isAllMatched","setIsAllMatched","isAllRightAnswer","setIsAllRightAnswer","setRightAnswer","selectedAnswerElem","setSelectedAnswerElem","isStarted","setIsStarted","isEnd","setIsEnd","wrongMode","setWrongMode","isRunningEndAnimation","setIsRunningEndAnimation","boradElem","useRef","headerElem","rightAnswerElem","numRowsElem","fruitElem","hintWrongElem","hintLabelElem","platePositions","setPlatePositions","draggingBtn","useEffect","length","map","elem","plateIndex","toString","match","prevPosition","prev","transitionDuration","trasitionDelay","hideHeaderElem","showHeaderElem","showNumRowElem","handleRightAnswer","handleWrongAnswer","current","firstChild","remove","setRef","isDraggable","forEach","contains","isMatchedSlot","isMatched","handleStart","handleDrag","checkMatchSlot","handleStop","plateBtn","slotIndex","newPosition","offsetLeft","offsetTop","buttonCenter","getCenterFromBounds","getBoundingClientRect","slots","isSelectedNew","slotCenter","checkXOfSlot","checkYOfSlot","b","s","handlePlateClick","hideHintWrongElem","hideHintLabelElem","board","bounds","boardBounds","opacity","headerBounds","width","transition","hideNumRowElem","runEndAnimation","showHintWrongElem","text","animationDuration","hintElem","top","left","offsetWidth","display","showHintLabelElem","count","labelElem","height","getSlots","getPlates","answer","src","Fruit","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d97bece.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruit.367f788c.svg\";","import React from 'react';\r\n\r\nconst NumRows = React.forwardRef((props, ref) => {\r\n  const handleClick = (e) => {\r\n    const target = e.target;\r\n    let clickedAnswer = Number(target.innerText);\r\n    \r\n    if(props.rightAnswer === clickedAnswer) {\r\n      props.onClick(clickedAnswer, target);\r\n      target.style.background = '#90f73b';\r\n    } else {\r\n      target.style.background = '#f94e4e';\r\n      props.onClick(clickedAnswer);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      target.style.removeProperty('background');\r\n    }, 700);\r\n  }\r\n\r\n  const getNumRows = () => {\r\n    var rows = [];\r\n    for (var i = 1; i <= 8; i++) {\r\n      rows.push(\r\n        <div\r\n          className=\"btn-num\"\r\n          key={i}\r\n          onClick={handleClick}\r\n          >{i}</div>\r\n      );\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  return (\r\n    <div className=\"num-rows\" ref={ref}>\r\n      {getNumRows()}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default NumRows;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\nconst PlateButton = (props) => {\r\n  if (props.draggable) {\r\n    return <Draggable\r\n      onStart={props.onStart}\r\n      onDrag={props.onDrag}\r\n      onStop={props.onStop}\r\n      disabled={props.disabled}\r\n      position={props.position}\r\n      onClick={props.onClick}>\r\n      <div className={`button-plate plate${props.index} ${props.disabled ? 'matched' : ''}`}>\r\n        <div className=\"button-cont\">\r\n          <div className=\"button-img\"></div>\r\n          <div className=\"button-sewed\"></div>\r\n          <div className=\"button-green\"></div>\r\n        </div>\r\n      </div>\r\n    </Draggable>;\r\n  }\r\n\r\n  let isClickable = props.rightAnswer === props.position.slot;\r\n\r\n  let styles = {\r\n    transform: `translate(${props.position.x}px, ${props.position.y}px)`,\r\n    cursor: isClickable ? 'pointer' : 'default'\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    const btn = e.target.closest('.button-plate');\r\n\r\n    if(isClickable) {\r\n      btn.classList.add('green');\r\n      props.onClick(e);\r\n    }\r\n  };\r\n  let classNames = `button-plate plate${props.index} `;\r\n\r\n  if(props.disabled) {\r\n    classNames += ` matched ${props.className}`;\r\n  }\r\n  \r\n  return <div\r\n    className={classNames}\r\n    style={styles}\r\n    data-slot-id={props.position.slot}\r\n    onClick={handleClick}\r\n  >\r\n    <div className=\"button-cont\">\r\n      <div className=\"button-img\"></div>\r\n      <div className=\"button-sewed\"></div>\r\n      <div className=\"button-green\"></div>\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default PlateButton;","import React, { useState, useEffect, useRef } from \"react\";\n\nimport \"./App.scss\";\nimport Fruit from \"./assets/img/fruit.svg\";\n\nimport NumRows from \"./components/NumRows\";\nimport PlateButton from \"./components/PlateButton\";\n\nconst App = () => {\n  const [slotElems, setSlotElems] = useState([]);\n  const [selectedSlotElem, setSelectedSlotElem] = useState(null);\n  const [matchedPlateElems, setMatchedPlateElems] = useState([]);\n  const [matchedSlotElems, setMatchedSlotElems] = useState([]);\n  const [isAllMatched, setIsAllMatched] = useState(false);\n  const [isAllRightAnswer, setIsAllRightAnswer] = useState(null);\n  const [rightAnswer, setRightAnswer] = useState(1);\n  const [selectedAnswerElem, setSelectedAnswerElem] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n  const [isEnd, setIsEnd] = useState(false);\n  const [wrongMode, setWrongMode] = useState(false);\n  const [isRunningEndAnimation, setIsRunningEndAnimation] = useState(false);\n  const boradElem = useRef(null);\n  const headerElem = useRef(null);\n  const rightAnswerElem = useRef(null);\n  const numRowsElem = useRef(null);\n  const fruitElem = useRef(null);\n  const hintWrongElem = useRef(null);\n  const hintLabelElem = useRef(null);\n\n  const [platePositions, setPlatePositions] = useState([\n    { x: 986, y: 80, slot: 0 },\n    { x: 686, y: 160, slot: 0 },\n    { x: 786, y: 240, slot: 0 },\n    { x: 900, y: 360, slot: 0 },\n    { x: 934, y: 200, slot: 0 },\n    { x: 986, y: 400, slot: 0 },\n    { x: 700, y: 400, slot: 0 },\n    { x: 840, y: 120, slot: 0 }\n  ]);\n  const slotCount = 5;\n  const plateCount = 8;\n  const slotOffset = 40;\n  let draggingBtn = null;\n\n  useEffect(() => {\n    if (matchedPlateElems.length !== slotCount) return;\n    if (isAllMatched) return;\n\n    setIsAllMatched(true);\n\n    matchedPlateElems.map(elem => {\n      const plateIndex = elem.classList\n        .toString()\n        .match(/plate[0-9]/)[0]\n        .match(/[0-9]/)[0];\n      const prevPosition = platePositions[plateIndex - 1];\n      let position = {\n        ...prevPosition,\n        y: prevPosition.y - (prevPosition.slot - 1) * 10\n      };\n\n      setPlatePositions(prev => {\n        prev[plateIndex - 1] = position;\n        return prev;\n      });\n\n      elem.style.transitionDuration = \"1000ms\";\n      elem.style.trasitionDelay = \"500ms\";\n      setTimeout(() => {\n        elem.style.removeProperty(\"transition-duration\");\n      }, 1000);\n      return null;\n    });\n    hideHeaderElem();\n\n    setTimeout(() => {\n      showHeaderElem(\"How many buttons?\");\n      showNumRowElem();\n    }, 500);\n  }, [matchedPlateElems]);\n\n  useEffect(() => {\n    if (!isStarted) return;\n\n    if (isAllRightAnswer) {\n      handleRightAnswer();\n      return;\n    }\n\n    if (!isAllRightAnswer && !wrongMode) {\n      setTimeout(() => {\n        handleWrongAnswer();\n      }, 500);\n    }\n  }, [isAllRightAnswer]);\n\n  useEffect(() => {\n    if (!isEnd) return;\n\n    setTimeout(() => {\n      fruitElem.current.firstChild.classList.remove(\"rotate\");\n      fruitElem.current.firstChild.classList.add(\"shake\");\n    }, 2000);\n    setTimeout(() => {\n      setIsEnd(false);\n      setIsStarted(false);\n    }, 4000);\n  }, [isEnd]);\n\n  const setRef = ref => {\n    if (!ref || slotElems.length > 4) return;\n\n    setSlotElems(prev => {\n      prev.push(ref);\n      return prev;\n    });\n  };\n\n  const isDraggable = index => {\n    let draggable = true;\n\n    matchedPlateElems.forEach(elem => {\n      if (elem.classList.contains(`plate${index}`)) {\n        draggable = false;\n      }\n    });\n\n    return draggable;\n  };\n\n  const isMatchedSlot = index => {\n    let isMatched = false;\n\n    matchedSlotElems.forEach(elem => {\n      if (elem.classList.contains(`slot${index}`)) {\n        isMatched = true;\n      }\n    });\n\n    return isMatched;\n  };\n\n  const handleStart = e => {\n    // Change the cursor to grabbing\n    e.target.closest(\".button-plate\").style.cursor = \"grabbing\";\n  };\n\n  const handleDrag = e => {\n    draggingBtn = draggingBtn ? draggingBtn : e.target.closest(\".button-plate\");\n    slotElems.map(elem => {\n      elem.style.background = \"#00000000\";\n      return null;\n    });\n    checkMatchSlot(draggingBtn);\n    if (selectedSlotElem) {\n      selectedSlotElem.style.background = \"#00000050\";\n    }\n  };\n\n  const handleStop = e => {\n    const plateBtn = draggingBtn\n      ? draggingBtn\n      : e.target.closest(\".button-plate\");\n    const plateIndex = plateBtn.classList\n      .toString()\n      .match(/plate[0-9]/)[0]\n      .match(/[0-9]/)[0];\n\n    if (selectedSlotElem) {\n      const slotIndex = Number(\n        selectedSlotElem.classList\n          .toString()\n          .match(/slot[0-9]/)[0]\n          .match(/[0-9]/)[0]\n      );\n\n      // Change the cursor to grab\n      plateBtn.style.cursor = \"default\";\n      selectedSlotElem.style.background = \"#00000000\";\n\n      let newPosition = {\n        x: selectedSlotElem.offsetLeft - 17,\n        y: selectedSlotElem.offsetTop - 78,\n        slot: slotIndex\n      };\n\n      setPlatePositions(prev => {\n        prev[plateIndex - 1] = newPosition;\n        return prev;\n      });\n      setMatchedPlateElems(prev => {\n        return [...prev, plateBtn];\n      });\n      setMatchedSlotElems(prev => {\n        return [...prev, selectedSlotElem];\n      });\n    } else {\n      // Change the cursor to grab\n      plateBtn.style.cursor = \"grab\";\n\n      plateBtn.style.transitionDuration = \"1000ms\";\n      setTimeout(() => {\n        plateBtn.style.removeProperty(\"transition-duration\");\n      }, 1000);\n    }\n    draggingBtn = null;\n    setSelectedSlotElem(null);\n  };\n\n  const checkMatchSlot = plateBtn => {\n    // Get btn center x and y\n    const buttonCenter = getCenterFromBounds(plateBtn.getBoundingClientRect());\n    // Find matchs slot\n    let slots = [...(slotElems ?? [])];\n    let isSelectedNew = false;\n\n    slots.forEach(slot => {\n      if (slot.classList.contains(\"matched\")) {\n        return;\n      }\n      // Center x and y of each slot\n      const slotCenter = getCenterFromBounds(slot.getBoundingClientRect());\n      if (\n        checkXOfSlot(buttonCenter, slotCenter) &&\n        checkYOfSlot(buttonCenter, slotCenter)\n      ) {\n        isSelectedNew = true;\n        setSelectedSlotElem(slot);\n        return;\n      }\n\n      if (!isSelectedNew) {\n        setSelectedSlotElem(null);\n      }\n      return null;\n    });\n  };\n\n  const checkXOfSlot = (b, s) => {\n    // Check the available when button exists the right side of the slot\n    if (s.x < b.x && s.x + slotOffset > b.x) {\n      return true;\n    }\n\n    // Check the available when button exists the left side of the slot\n    if (s.x > b.x && s.x - slotOffset < b.x) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const checkYOfSlot = (b, s) => {\n    // Check the available when button exists the top of the slot\n    if (s.y > b.y && s.y - slotOffset < b.y) {\n      return true;\n    }\n\n    // Check the available when button exists the bottom of the slot\n    if (s.y < b.y && s.y + slotOffset > b.y) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleNumRowClick = (answer, elem) => {\n    if (isAllRightAnswer === null) {\n      setIsAllRightAnswer(prev => {\n        return answer === slotCount;\n      });\n\n      setSelectedAnswerElem(elem);\n      return;\n    }\n\n    if (!wrongMode && answer === slotCount) {\n      setTimeout(() => {\n        runEndAnimation();\n      }, 500);\n      return;\n    }\n\n    if (answer !== rightAnswer) return;\n\n    setRightAnswer(prev => {\n      return prev + 1;\n    });\n\n    showHintLabelElem(rightAnswer);\n\n    if (answer !== slotCount) {\n      hideNumRowElem();\n      showHintWrongElem(rightAnswer);\n      return;\n    }\n\n    hideHeaderElem();\n    setTimeout(() => {\n      headerElem.current.classList.remove(\"green\");\n      showHeaderElem(\"How many buttons?\");\n    }, 600);\n    setWrongMode(false);\n  };\n\n  const handlePlateClick = e => {\n    hideHintWrongElem();\n\n    setTimeout(() => {\n      headerElem.current.classList.add(\"green\");\n      showHeaderElem(\"How many green buttons?\");\n    }, 500);\n\n    setTimeout(() => {\n      hideHintLabelElem();\n      showNumRowElem();\n    }, 500);\n  };\n\n  const handleRightAnswer = () => {\n    const elem = rightAnswerElem.current;\n    const board = boradElem.current;\n    elem.innerText = selectedAnswerElem.innerText;\n    let bounds = selectedAnswerElem.getBoundingClientRect();\n    let boardBounds = board.getBoundingClientRect();\n\n    elem.style.transform = `translate(${bounds.x - boardBounds.x}px, ${bounds.y}px)`;\n    elem.style.opacity = 1;\n    \n    setTimeout(() => {\n      let headerBounds = headerElem.current.getBoundingClientRect();\n      let x = headerBounds.width / 1.55 + headerBounds.x;\n      let y = headerBounds.y + 10;\n      elem.style.transition = \"transform 1000ms\";\n      elem.style.transform = `translate(${x}px, ${y}px)`;\n    }, 500);\n\n    setTimeout(() => {\n      hideNumRowElem();\n    }, 2000);\n\n    setTimeout(() => {\n      runEndAnimation();\n    }, 2500);\n  };\n\n  const handleWrongAnswer = () => {\n    hideHeaderElem();\n    hideNumRowElem();\n    showHintWrongElem();\n    setWrongMode(true);\n  };\n\n  const runEndAnimation = () => {\n    setIsRunningEndAnimation(true);\n    hideHeaderElem();\n    hideHintLabelElem();\n    hideNumRowElem();\n    rightAnswerElem.current.classList.add(\"fade-out\");\n    matchedPlateElems.map((elem, i) => {\n      elem.classList.add(\"fade-out\");\n      return null;\n    });\n\n    setTimeout(() => {\n      setIsEnd(true);\n    }, 500);\n  };\n\n  const showHeaderElem = text => {\n    const elem = headerElem.current;\n    elem.innerText = text;\n    elem.style.animationDuration = \"1s\";\n\n    elem.classList.remove(\"fade-out\");\n    elem.classList.add(\"fade-in\");\n  };\n\n  const hideHeaderElem = () => {\n    const elem = headerElem.current;\n    elem.classList.remove(\"fade-in\");\n    elem.classList.add(\"fade-out\");\n  };\n\n  const showHintWrongElem = (slotIndex = 0) => {\n    setTimeout(() => {\n      const position = slotElems[slotIndex].getBoundingClientRect();\n      const hintElem = hintWrongElem.current;\n      let offset = 180;\n      let top = position.top - slotIndex * 10;\n      let left = position.left - hintElem.offsetWidth - position.width - offset;\n\n      hintElem.style.left = left + \"px\";\n      hintElem.style.top = top + \"px\";\n\n      hintElem.style.display = \"block\";\n      hintElem.classList.remove(\"fade-out\");\n      hintElem.classList.add(\"fade-in\");\n    }, 500);\n  };\n\n  const hideHintWrongElem = () => {\n    setTimeout(() => {\n      const hintElem = hintWrongElem.current;\n      hintElem.classList.remove(\"fade-in\");\n      hintElem.classList.add(\"fade-out\");\n\n      setTimeout(() => {\n        hintElem.style.display = \"none\";\n      }, 500);\n    }, 500);\n  };\n\n  const showNumRowElem = () => {\n    const elem = numRowsElem.current;\n    elem.style.display = \"flex\";\n    elem.classList.remove(\"fade-out-bottom\");\n    elem.classList.add(\"fade-in-bottom\");\n  };\n\n  const hideNumRowElem = () => {\n    const elem = numRowsElem.current;\n\n    setTimeout(() => {\n      elem.classList.remove(\"fade-in-bottom\");\n      elem.classList.add(\"fade-out-bottom\");\n    }, 500);\n\n    setTimeout(() => {\n      elem.style.display = \"none\";\n    }, 900);\n  };\n\n  const showHintLabelElem = (count = 1) => {\n    let labelElem = hintLabelElem.current;\n    labelElem.innerText = `${count} button${count > 1 ? \"s\" : \"\"}`;\n    labelElem.classList.remove(\"fade-out\");\n    labelElem.classList.add(\"fade-in\");\n  };\n\n  const hideHintLabelElem = () => {\n    let labelElem = hintLabelElem.current;\n    labelElem.classList.remove(\"fade-in\");\n    labelElem.classList.add(\"fade-out\");\n  };\n\n  const getCenterFromBounds = bounds => {\n    return { x: bounds.x + bounds.width / 2, y: bounds.y + bounds.height / 2 };\n  };\n\n  const getSlots = () => {\n    var rows = [];\n    for (var i = 1; i <= slotCount; i++) {\n      rows.push(\n        <div\n          ref={setRef}\n          className={`slot slot${i} ${isMatchedSlot(i) ? \"matched\" : \"\"}`}\n          key={i}\n        ></div>\n      );\n    }\n    return rows;\n  };\n\n  const getPlates = () => {\n    var rows = [];\n\n    for (var i = 1; i <= plateCount; i++) {\n      let disabled = !isDraggable(i);\n      let draggable = isStarted && isAllRightAnswer !== false;\n\n      rows.push(\n        <PlateButton\n          draggable={draggable}\n          onStart={handleStart}\n          onDrag={handleDrag}\n          onStop={handleStop}\n          disabled={disabled}\n          position={platePositions[i - 1]}\n          rightAnswer={rightAnswer}\n          onClick={handlePlateClick}\n          className={isRunningEndAnimation ? \"fade-out\" : \"\"}\n          index={i}\n          key={i}\n        />\n      );\n    }\n    return rows;\n  };\n\n  return (\n    <div className=\"App\">\n      <button\n        style={{ position: \"absolute\" }}\n        onClick={() => {\n          setIsStarted(true);\n        }}\n      >\n        start\n      </button>\n      <div className={`board ${isAllMatched ? \"all-matched\" : \"\"}`} ref={boradElem}>\n        <div ref={headerElem} className=\"header\">\n          Sew the buttons on the jacket\n        </div>\n        <div className=\"jacket\"></div>\n        {getSlots()}\n        {getPlates()}\n\n        <NumRows\n          rightAnswer={wrongMode ? rightAnswer : slotCount}\n          onClick={handleNumRowClick}\n          ref={numRowsElem}\n        />\n        <div ref={rightAnswerElem} className=\"right-answer\"></div>\n        <div ref={hintWrongElem} className=\"hint-wrong\">\n          <div className=\"content\">Tap to color</div>\n          <div className=\"corner\"></div>\n        </div>\n        <div className=\"hint-label\" ref={hintLabelElem}></div>\n        {isEnd && (\n          <div className=\"end-animation\">\n            <div>\n              <div className=\"title\">Great!</div>\n              <div className=\"fruit bounce-left-right\" ref={fruitElem}>\n                <img src={Fruit} alt=\"Fruit\" className=\"rotate\" />\n              </div>\n              <div className=\"mask\"></div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}